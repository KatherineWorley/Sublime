At the beginning of a path, the tilde character represents the home directory of the specified user, or the currently logged in user if no user is specified. (Unlike . and .., this is not an actual directory, but a substitution performed by the shell.)

For example, you can refer to the current user’s Documents folder as ~/Documents. Similarly, if you have another user whose short name is frankiej, you could access that user’s Documents folder as ~frankiej/Documents (if that user has set permissions on his or her Documents directory to allow you to see its contents).

The $HOME environment variable can also be used to represent the current user’s home directory.

In OS X, the user’s home directory usually resides in the /Users directory or on a network server.

File and directory names traditionally include only letters, numbers, hyphens, the underscore character (_), and often a period (.) followed by a file extension that indicates the type of file (.txt, for example). Most other characters, including space characters, should be avoided because they have special meaning to the shell.

Although some OS X file systems permit the use of these other characters, including spaces, you must do one of the following:

“Escape” the character—put a backslash character (\) immediately before the character in the path.
Add single or double quotation marks around the path or the portion that contains the offending characters.
For example, the path name My Disk can be written as "My Disk", 'My Disk', or My\ Disk.

Single quotes are safer than double quotes because the shell does not do any interpretation of the contents of a single-quoted string. However, double quotes are less likely to appear in a filename, making them slightly easier to use. When in doubt, use a backslash before the character in question, or two backslashes to represent a literal backslash